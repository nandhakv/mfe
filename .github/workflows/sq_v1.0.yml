name: SonarQube Analysis

on:
  workflow_dispatch:
    inputs:
      files:
        description: "Comma-separated list of files to analyze (e.g., src/index.js, app.js)"
        required: true
      branch:
        description: "Branch to run the analysis on"
        required: true
        default: "master"
      github_token:
        description: "GitHub Token from trigger request"
        required: true
      sonarqube_host:
        description: "SonarQube Host URL"
        required: true
      sonarqube_token:
        description: "SonarQube Token"
        required: true

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Set Unique Project Key
        run: |
          TIMESTAMP=$(date +%s)
          UNIQUE_PROJECT_KEY="nandhakv_mfe_${TIMESTAMP}"
          echo "SONAR_PROJECT_KEY=$UNIQUE_PROJECT_KEY" >> $GITHUB_ENV
          echo "Using SonarQube Project Key: $UNIQUE_PROJECT_KEY"

      - name: Create SonarQube Project
        run: |
          echo "ðŸš€ Creating new SonarQube project: $SONAR_PROJECT_KEY..."
          curl -s -X POST -u "${{ github.event.inputs.sonarqube_token }}:" \
            "${{ github.event.inputs.sonarqube_host }}/api/projects/create" \
            -d "name=$SONAR_PROJECT_KEY&project=$SONAR_PROJECT_KEY"
          echo "âœ… SonarQube project created."

      - name: Run SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ github.event.inputs.sonarqube_token }}
          SONAR_HOST_URL: ${{ github.event.inputs.sonarqube_host }}
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}
            -Dsonar.sources=.
            -Dsonar.inclusions=${{ github.event.inputs.files }}
            -Dsonar.scm.provider=git

            

