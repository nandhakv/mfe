name: SonarQube Analysis

on:
  workflow_dispatch:
    inputs:
      files:
        description: "Comma-separated list of files to analyze (e.g., src/index.js, app.js)"
        required: true
      branch:
        description: "Branch to run the analysis on"
        required: true
        default: "master"

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0 # Fixes shallow clone issue for SonarQube

      - name: Set up JDK 17 # SonarQube requires Java
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Configure Git (Fix Missing Blame Info)
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

      - name: Set FILES variable
        run: |
          if [ -z "${{ github.event.inputs.files }}" ]; then
            echo "FILES=src/index.js" >> $GITHUB_ENV
          else
            echo "FILES=${{ github.event.inputs.files }}" >> $GITHUB_ENV
          fi

      - name: Run SonarQube Analysis
        uses: sonarsource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: "squ_3edfa90db17cdd003e434da9a4e28de549a83595"
          SONAR_HOST_URL: "http://sonarqube-alb-1277571580.us-east-1.elb.amazonaws.com"
        with:
          args: >
            -Dsonar.projectKey=nandhakv_mfe_f6846554-c846-4374-8d0c-f9459c1dc983
            -Dsonar.sources=${{ env.FILES }}
            -Dsonar.scm.provider=git

      - name: Get SonarQube Analysis ID
        run: |
          SONAR_PROJECT_KEY="nandhakv_mfe_f6846554-c846-4374-8d0c-f9459c1dc983"
          SONAR_TOKEN="squ_3edfa90db17cdd003e434da9a4e28de549a83595"
          SONAR_HOST="http://sonarqube-alb-1277571580.us-east-1.elb.amazonaws.com"

          echo "🔍 Fetching analysis ID..."
          ANALYSIS_RESPONSE=$(curl -s -u $SONAR_TOKEN: "$SONAR_HOST/api/ce/component?component=$SONAR_PROJECT_KEY")

          echo "📄 Analysis Response: $ANALYSIS_RESPONSE"
          ANALYSIS_ID=$(echo "$ANALYSIS_RESPONSE" | jq -r '.current.analysisId')

          if [[ -z "$ANALYSIS_ID" || "$ANALYSIS_ID" == "null" ]]; then
            echo "❌ ERROR: Failed to get analysis ID."
            exit 1
          fi

          echo "✅ Found Analysis ID: $ANALYSIS_ID"

          # Save the project_key and analysis_id to a JSON file
          echo "{ \"project_key\": \"$SONAR_PROJECT_KEY\", \"analysis_id\": \"$ANALYSIS_ID\" }" > sonar_data.json

      - name: Send Project Key & Analysis ID to Webhook
        run: |
          WEBHOOK_URL="https://hkdk.events/l6nci7bf5quk8c"

          curl -X POST "$WEBHOOK_URL" \
               -H "Content-Type: application/json" \
               -d @sonar_data.json
